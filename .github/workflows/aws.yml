  
name: Full AWS
on: [push,workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials from Test account
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Create repository with the AWS CLI
      env:
        AWS_DEFAULT_REGION: us-east-1
        ECR_REPOSITORY: ${{ github.repository }}
      run: |
        aws ecr describe-repositories --region $AWS_DEFAULT_REGION --repository-names $ECR_REPOSITORY > /dev/null 2>&1 || saws ecr create-repository --region $AWS_DEFAULT_REGION --repository-name $ECR_REPOSITORY 

    - name: Create policy with the AWS CLI
      env: 
        ECR_REPOSITORY: ${{ github.repository }}
      run: |
        aws ecr get-lifecycle-policy --repository-name $ECR_REPOSITORY > /dev/null 2>&1 || aws ecr put-lifecycle-policy --repository-name $ECR_REPOSITORY --lifecycle-policy-text '{ "rules": [ { "rulePriority": 1, "description": "Rule for Image Expiration", "selection": { "tagStatus": "any", "countType": "imageCountMoreThan", "countNumber": 5, "action": { "type": "expire" } } ] }'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ github.repository }}
        IMAGE_TAG: dev-${{ github.run_number }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    